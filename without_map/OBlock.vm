function OBlock.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push pointer 0
return
function OBlock.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function OBlock.create_block 0
push argument 0
pop pointer 0
push argument 2
push constant 0
call Block.setR 2
pop temp 0
push argument 2
push constant 4
call Block.setC 2
pop temp 0
push argument 2
call Block.getR 1
pop this 0
push argument 2
call Block.getC 1
pop this 1
push argument 1
push this 0
push this 1
call Map.read 3
push constant 1
eq
push argument 1
push this 0
push this 1
push constant 1
add
call Map.read 3
push constant 1
eq
or
push argument 1
push this 0
push constant 1
add
push this 1
call Map.read 3
push constant 1
eq
or
push argument 1
push this 0
push constant 1
add
push this 1
push constant 1
add
call Map.read 3
push constant 1
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 1
push this 0
push this 1
call Map.set 3
pop temp 0
push argument 1
push this 0
push this 1
push constant 1
add
call Map.set 3
pop temp 0
push argument 1
push this 0
push constant 1
add
push this 1
call Map.set 3
pop temp 0
push argument 1
push this 0
push constant 1
add
push this 1
push constant 1
add
call Map.set 3
pop temp 0
push constant 1
return
function OBlock.down 2
push argument 0
pop pointer 0
push argument 2
call Block.getR 1
pop local 0
push argument 2
call Block.getC 1
pop local 1
push local 0
push constant 18
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push local 0
push constant 2
add
push local 1
call Map.read 3
push constant 1
eq
push argument 1
push local 0
push constant 2
add
push local 1
push constant 1
add
call Map.read 3
push constant 1
eq
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
goto IF_END1
label IF_FALSE1
push argument 1
push local 0
push local 1
call Map.reset 3
pop temp 0
push argument 1
push local 0
push local 1
push constant 1
add
call Map.reset 3
pop temp 0
push argument 1
push local 0
push constant 2
add
push local 1
call Map.set 3
pop temp 0
push argument 1
push local 0
push constant 2
add
push local 1
push constant 1
add
call Map.set 3
pop temp 0
push argument 2
push local 0
push constant 1
add
call Block.setR 2
pop temp 0
label IF_END1
label IF_FALSE0
push constant 0
return
function OBlock.left 2
push argument 0
pop pointer 0
push argument 2
call Block.getR 1
pop local 0
push argument 2
call Block.getC 1
pop local 1
push local 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 1
push local 0
push local 1
push constant 1
sub
call Map.read 3
push constant 0
eq
push argument 1
push local 0
push constant 1
add
push local 1
push constant 1
sub
call Map.read 3
push constant 0
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push local 0
push local 1
push constant 1
sub
call Map.set 3
pop temp 0
push argument 1
push local 0
push constant 1
add
push local 1
push constant 1
sub
call Map.set 3
pop temp 0
push argument 1
push local 0
push local 1
push constant 1
add
call Map.reset 3
pop temp 0
push argument 1
push local 0
push constant 1
add
push local 1
push constant 1
add
call Map.reset 3
pop temp 0
push argument 2
push local 1
push constant 1
sub
call Block.setC 2
pop temp 0
label IF_FALSE1
push constant 0
return
function OBlock.right 2
push argument 0
pop pointer 0
push argument 2
call Block.getR 1
pop local 0
push argument 2
call Block.getC 1
pop local 1
push local 1
push constant 8
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 1
push local 0
push local 1
push constant 2
add
call Map.read 3
push constant 0
eq
push argument 1
push local 0
push constant 1
add
push local 1
push constant 2
add
call Map.read 3
push constant 0
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push local 0
push local 1
push constant 2
add
call Map.set 3
pop temp 0
push argument 1
push local 0
push constant 1
add
push local 1
push constant 2
add
call Map.set 3
pop temp 0
push argument 1
push local 0
push local 1
call Map.reset 3
pop temp 0
push argument 1
push local 0
push constant 1
add
push local 1
call Map.reset 3
pop temp 0
push argument 2
push local 1
push constant 1
add
call Block.setC 2
pop temp 0
label IF_FALSE1
push constant 0
return
function OBlock.O_isBottom 3
push argument 0
pop pointer 0
push argument 2
call Block.getR 1
pop local 1
push argument 2
call Block.getC 1
pop local 2
push local 1
push constant 18
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push local 1
push constant 2
add
push local 2
call Map.read 3
push constant 1
eq
push argument 1
push local 1
push constant 2
add
push local 2
push constant 1
add
call Map.read 3
push constant 1
eq
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 0
goto IF_END1
label IF_FALSE1
push constant 0
pop local 0
label IF_END1
goto IF_END0
label IF_FALSE0
push constant 0
not
pop local 0
label IF_END0
push local 0
return
function OBlock.clear 2
push argument 0
pop pointer 0
push argument 2
call Block.getR 1
pop local 0
push argument 2
call Block.getC 1
pop local 1
push argument 1
push local 0
push local 1
call Map.reset 3
pop temp 0
push argument 1
push local 0
push local 1
push constant 1
add
call Map.reset 3
pop temp 0
push argument 1
push local 0
push constant 1
add
push local 1
call Map.reset 3
pop temp 0
push argument 1
push local 0
push constant 1
add
push local 1
push constant 1
add
call Map.reset 3
pop temp 0
push constant 0
return
